{"ast":null,"code":"import { Class } from '../../core/Class';\nimport { setOptions } from '../../core/Util';\nimport { toPoint as point } from '../../geometry/Point';\nimport Browser from '../../core/Browser';\n\n/*\r\n * @class Icon\r\n * @aka L.Icon\r\n *\r\n * Represents an icon to provide when creating a marker.\r\n *\r\n * @example\r\n *\r\n * ```js\r\n * var myIcon = L.icon({\r\n *     iconUrl: 'my-icon.png',\r\n *     iconRetinaUrl: 'my-icon@2x.png',\r\n *     iconSize: [38, 95],\r\n *     iconAnchor: [22, 94],\r\n *     popupAnchor: [-3, -76],\r\n *     shadowUrl: 'my-icon-shadow.png',\r\n *     shadowRetinaUrl: 'my-icon-shadow@2x.png',\r\n *     shadowSize: [68, 95],\r\n *     shadowAnchor: [22, 94]\r\n * });\r\n *\r\n * L.marker([50.505, 30.57], {icon: myIcon}).addTo(map);\r\n * ```\r\n *\r\n * `L.Icon.Default` extends `L.Icon` and is the blue icon Leaflet uses for markers by default.\r\n *\r\n */\n\nexport var Icon = Class.extend({\n  /* @section\r\n   * @aka Icon options\r\n   *\r\n   * @option iconUrl: String = null\r\n   * **(required)** The URL to the icon image (absolute or relative to your script path).\r\n   *\r\n   * @option iconRetinaUrl: String = null\r\n   * The URL to a retina sized version of the icon image (absolute or relative to your\r\n   * script path). Used for Retina screen devices.\r\n   *\r\n   * @option iconSize: Point = null\r\n   * Size of the icon image in pixels.\r\n   *\r\n   * @option iconAnchor: Point = null\r\n   * The coordinates of the \"tip\" of the icon (relative to its top left corner). The icon\r\n   * will be aligned so that this point is at the marker's geographical location. Centered\r\n   * by default if size is specified, also can be set in CSS with negative margins.\r\n   *\r\n   * @option popupAnchor: Point = [0, 0]\r\n   * The coordinates of the point from which popups will \"open\", relative to the icon anchor.\r\n   *\r\n   * @option tooltipAnchor: Point = [0, 0]\r\n   * The coordinates of the point from which tooltips will \"open\", relative to the icon anchor.\r\n   *\r\n   * @option shadowUrl: String = null\r\n   * The URL to the icon shadow image. If not specified, no shadow image will be created.\r\n   *\r\n   * @option shadowRetinaUrl: String = null\r\n   *\r\n   * @option shadowSize: Point = null\r\n   * Size of the shadow image in pixels.\r\n   *\r\n   * @option shadowAnchor: Point = null\r\n   * The coordinates of the \"tip\" of the shadow (relative to its top left corner) (the same\r\n   * as iconAnchor if not specified).\r\n   *\r\n   * @option className: String = ''\r\n   * A custom class name to assign to both icon and shadow images. Empty by default.\r\n   */\n\n  options: {\n    popupAnchor: [0, 0],\n    tooltipAnchor: [0, 0],\n    // @option crossOrigin: Boolean|String = false\n    // Whether the crossOrigin attribute will be added to the tiles.\n    // If a String is provided, all tiles will have their crossOrigin attribute set to the String provided. This is needed if you want to access tile pixel data.\n    // Refer to [CORS Settings](https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_settings_attributes) for valid String values.\n    crossOrigin: false\n  },\n  initialize: function (options) {\n    setOptions(this, options);\n  },\n  // @method createIcon(oldIcon?: HTMLElement): HTMLElement\n  // Called internally when the icon has to be shown, returns a `<img>` HTML element\n  // styled according to the options.\n  createIcon: function (oldIcon) {\n    return this._createIcon('icon', oldIcon);\n  },\n  // @method createShadow(oldIcon?: HTMLElement): HTMLElement\n  // As `createIcon`, but for the shadow beneath it.\n  createShadow: function (oldIcon) {\n    return this._createIcon('shadow', oldIcon);\n  },\n  _createIcon: function (name, oldIcon) {\n    var src = this._getIconUrl(name);\n    if (!src) {\n      if (name === 'icon') {\n        throw new Error('iconUrl not set in Icon options (see the docs).');\n      }\n      return null;\n    }\n    var img = this._createImg(src, oldIcon && oldIcon.tagName === 'IMG' ? oldIcon : null);\n    this._setIconStyles(img, name);\n    if (this.options.crossOrigin || this.options.crossOrigin === '') {\n      img.crossOrigin = this.options.crossOrigin === true ? '' : this.options.crossOrigin;\n    }\n    return img;\n  },\n  _setIconStyles: function (img, name) {\n    var options = this.options;\n    var sizeOption = options[name + 'Size'];\n    if (typeof sizeOption === 'number') {\n      sizeOption = [sizeOption, sizeOption];\n    }\n    var size = point(sizeOption),\n      anchor = point(name === 'shadow' && options.shadowAnchor || options.iconAnchor || size && size.divideBy(2, true));\n    img.className = 'leaflet-marker-' + name + ' ' + (options.className || '');\n    if (anchor) {\n      img.style.marginLeft = -anchor.x + 'px';\n      img.style.marginTop = -anchor.y + 'px';\n    }\n    if (size) {\n      img.style.width = size.x + 'px';\n      img.style.height = size.y + 'px';\n    }\n  },\n  _createImg: function (src, el) {\n    el = el || document.createElement('img');\n    el.src = src;\n    return el;\n  },\n  _getIconUrl: function (name) {\n    return Browser.retina && this.options[name + 'RetinaUrl'] || this.options[name + 'Url'];\n  }\n});\n\n// @factory L.icon(options: Icon options)\n// Creates an icon instance with the given options.\nexport function icon(options) {\n  return new Icon(options);\n}","map":{"version":3,"names":["Class","setOptions","toPoint","point","Browser","Icon","extend","options","popupAnchor","tooltipAnchor","crossOrigin","initialize","createIcon","oldIcon","_createIcon","createShadow","name","src","_getIconUrl","Error","img","_createImg","tagName","_setIconStyles","sizeOption","size","anchor","shadowAnchor","iconAnchor","divideBy","className","style","marginLeft","x","marginTop","y","width","height","el","document","createElement","retina","icon"],"sources":["C:/Users/aless/OneDrive/√Årea de Trabalho/Registro Ponto front-end GitHub/ReactProjects/my-app/node_modules/leaflet/src/layer/marker/Icon.js"],"sourcesContent":["import {Class} from '../../core/Class';\r\nimport {setOptions} from '../../core/Util';\r\nimport {toPoint as point} from '../../geometry/Point';\r\nimport Browser from '../../core/Browser';\r\n\r\n/*\r\n * @class Icon\r\n * @aka L.Icon\r\n *\r\n * Represents an icon to provide when creating a marker.\r\n *\r\n * @example\r\n *\r\n * ```js\r\n * var myIcon = L.icon({\r\n *     iconUrl: 'my-icon.png',\r\n *     iconRetinaUrl: 'my-icon@2x.png',\r\n *     iconSize: [38, 95],\r\n *     iconAnchor: [22, 94],\r\n *     popupAnchor: [-3, -76],\r\n *     shadowUrl: 'my-icon-shadow.png',\r\n *     shadowRetinaUrl: 'my-icon-shadow@2x.png',\r\n *     shadowSize: [68, 95],\r\n *     shadowAnchor: [22, 94]\r\n * });\r\n *\r\n * L.marker([50.505, 30.57], {icon: myIcon}).addTo(map);\r\n * ```\r\n *\r\n * `L.Icon.Default` extends `L.Icon` and is the blue icon Leaflet uses for markers by default.\r\n *\r\n */\r\n\r\nexport var Icon = Class.extend({\r\n\r\n\t/* @section\r\n\t * @aka Icon options\r\n\t *\r\n\t * @option iconUrl: String = null\r\n\t * **(required)** The URL to the icon image (absolute or relative to your script path).\r\n\t *\r\n\t * @option iconRetinaUrl: String = null\r\n\t * The URL to a retina sized version of the icon image (absolute or relative to your\r\n\t * script path). Used for Retina screen devices.\r\n\t *\r\n\t * @option iconSize: Point = null\r\n\t * Size of the icon image in pixels.\r\n\t *\r\n\t * @option iconAnchor: Point = null\r\n\t * The coordinates of the \"tip\" of the icon (relative to its top left corner). The icon\r\n\t * will be aligned so that this point is at the marker's geographical location. Centered\r\n\t * by default if size is specified, also can be set in CSS with negative margins.\r\n\t *\r\n\t * @option popupAnchor: Point = [0, 0]\r\n\t * The coordinates of the point from which popups will \"open\", relative to the icon anchor.\r\n\t *\r\n\t * @option tooltipAnchor: Point = [0, 0]\r\n\t * The coordinates of the point from which tooltips will \"open\", relative to the icon anchor.\r\n\t *\r\n\t * @option shadowUrl: String = null\r\n\t * The URL to the icon shadow image. If not specified, no shadow image will be created.\r\n\t *\r\n\t * @option shadowRetinaUrl: String = null\r\n\t *\r\n\t * @option shadowSize: Point = null\r\n\t * Size of the shadow image in pixels.\r\n\t *\r\n\t * @option shadowAnchor: Point = null\r\n\t * The coordinates of the \"tip\" of the shadow (relative to its top left corner) (the same\r\n\t * as iconAnchor if not specified).\r\n\t *\r\n\t * @option className: String = ''\r\n\t * A custom class name to assign to both icon and shadow images. Empty by default.\r\n\t */\r\n\r\n\toptions: {\r\n\t\tpopupAnchor: [0, 0],\r\n\t\ttooltipAnchor: [0, 0],\r\n\r\n\t\t// @option crossOrigin: Boolean|String = false\r\n\t\t// Whether the crossOrigin attribute will be added to the tiles.\r\n\t\t// If a String is provided, all tiles will have their crossOrigin attribute set to the String provided. This is needed if you want to access tile pixel data.\r\n\t\t// Refer to [CORS Settings](https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_settings_attributes) for valid String values.\r\n\t\tcrossOrigin: false\r\n\t},\r\n\r\n\tinitialize: function (options) {\r\n\t\tsetOptions(this, options);\r\n\t},\r\n\r\n\t// @method createIcon(oldIcon?: HTMLElement): HTMLElement\r\n\t// Called internally when the icon has to be shown, returns a `<img>` HTML element\r\n\t// styled according to the options.\r\n\tcreateIcon: function (oldIcon) {\r\n\t\treturn this._createIcon('icon', oldIcon);\r\n\t},\r\n\r\n\t// @method createShadow(oldIcon?: HTMLElement): HTMLElement\r\n\t// As `createIcon`, but for the shadow beneath it.\r\n\tcreateShadow: function (oldIcon) {\r\n\t\treturn this._createIcon('shadow', oldIcon);\r\n\t},\r\n\r\n\t_createIcon: function (name, oldIcon) {\r\n\t\tvar src = this._getIconUrl(name);\r\n\r\n\t\tif (!src) {\r\n\t\t\tif (name === 'icon') {\r\n\t\t\t\tthrow new Error('iconUrl not set in Icon options (see the docs).');\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tvar img = this._createImg(src, oldIcon && oldIcon.tagName === 'IMG' ? oldIcon : null);\r\n\t\tthis._setIconStyles(img, name);\r\n\r\n\t\tif (this.options.crossOrigin || this.options.crossOrigin === '') {\r\n\t\t\timg.crossOrigin = this.options.crossOrigin === true ? '' : this.options.crossOrigin;\r\n\t\t}\r\n\r\n\t\treturn img;\r\n\t},\r\n\r\n\t_setIconStyles: function (img, name) {\r\n\t\tvar options = this.options;\r\n\t\tvar sizeOption = options[name + 'Size'];\r\n\r\n\t\tif (typeof sizeOption === 'number') {\r\n\t\t\tsizeOption = [sizeOption, sizeOption];\r\n\t\t}\r\n\r\n\t\tvar size = point(sizeOption),\r\n\t\t    anchor = point(name === 'shadow' && options.shadowAnchor || options.iconAnchor ||\r\n\t\t            size && size.divideBy(2, true));\r\n\r\n\t\timg.className = 'leaflet-marker-' + name + ' ' + (options.className || '');\r\n\r\n\t\tif (anchor) {\r\n\t\t\timg.style.marginLeft = (-anchor.x) + 'px';\r\n\t\t\timg.style.marginTop  = (-anchor.y) + 'px';\r\n\t\t}\r\n\r\n\t\tif (size) {\r\n\t\t\timg.style.width  = size.x + 'px';\r\n\t\t\timg.style.height = size.y + 'px';\r\n\t\t}\r\n\t},\r\n\r\n\t_createImg: function (src, el) {\r\n\t\tel = el || document.createElement('img');\r\n\t\tel.src = src;\r\n\t\treturn el;\r\n\t},\r\n\r\n\t_getIconUrl: function (name) {\r\n\t\treturn Browser.retina && this.options[name + 'RetinaUrl'] || this.options[name + 'Url'];\r\n\t}\r\n});\r\n\r\n\r\n// @factory L.icon(options: Icon options)\r\n// Creates an icon instance with the given options.\r\nexport function icon(options) {\r\n\treturn new Icon(options);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}