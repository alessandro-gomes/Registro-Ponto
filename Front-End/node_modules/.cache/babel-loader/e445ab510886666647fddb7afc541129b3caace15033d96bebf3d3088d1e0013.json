{"ast":null,"code":"import { Layer } from '../Layer';\nimport { IconDefault } from './Icon.Default';\nimport * as Util from '../../core/Util';\nimport { toLatLng as latLng } from '../../geo/LatLng';\nimport { toPoint as point } from '../../geometry/Point';\nimport * as DomUtil from '../../dom/DomUtil';\nimport * as DomEvent from '../../dom/DomEvent';\nimport { MarkerDrag } from './Marker.Drag';\n\n/*\r\n * @class Marker\r\n * @inherits Interactive layer\r\n * @aka L.Marker\r\n * L.Marker is used to display clickable/draggable icons on the map. Extends `Layer`.\r\n *\r\n * @example\r\n *\r\n * ```js\r\n * L.marker([50.5, 30.5]).addTo(map);\r\n * ```\r\n */\n\nexport var Marker = Layer.extend({\n  // @section\n  // @aka Marker options\n  options: {\n    // @option icon: Icon = *\n    // Icon instance to use for rendering the marker.\n    // See [Icon documentation](#L.Icon) for details on how to customize the marker icon.\n    // If not specified, a common instance of `L.Icon.Default` is used.\n    icon: new IconDefault(),\n    // Option inherited from \"Interactive layer\" abstract class\n    interactive: true,\n    // @option keyboard: Boolean = true\n    // Whether the marker can be tabbed to with a keyboard and clicked by pressing enter.\n    keyboard: true,\n    // @option title: String = ''\n    // Text for the browser tooltip that appear on marker hover (no tooltip by default).\n    // [Useful for accessibility](https://leafletjs.com/examples/accessibility/#markers-must-be-labelled).\n    title: '',\n    // @option alt: String = 'Marker'\n    // Text for the `alt` attribute of the icon image.\n    // [Useful for accessibility](https://leafletjs.com/examples/accessibility/#markers-must-be-labelled).\n    alt: 'Marker',\n    // @option zIndexOffset: Number = 0\n    // By default, marker images zIndex is set automatically based on its latitude. Use this option if you want to put the marker on top of all others (or below), specifying a high value like `1000` (or high negative value, respectively).\n    zIndexOffset: 0,\n    // @option opacity: Number = 1.0\n    // The opacity of the marker.\n    opacity: 1,\n    // @option riseOnHover: Boolean = false\n    // If `true`, the marker will get on top of others when you hover the mouse over it.\n    riseOnHover: false,\n    // @option riseOffset: Number = 250\n    // The z-index offset used for the `riseOnHover` feature.\n    riseOffset: 250,\n    // @option pane: String = 'markerPane'\n    // `Map pane` where the markers icon will be added.\n    pane: 'markerPane',\n    // @option shadowPane: String = 'shadowPane'\n    // `Map pane` where the markers shadow will be added.\n    shadowPane: 'shadowPane',\n    // @option bubblingMouseEvents: Boolean = false\n    // When `true`, a mouse event on this marker will trigger the same event on the map\n    // (unless [`L.DomEvent.stopPropagation`](#domevent-stoppropagation) is used).\n    bubblingMouseEvents: false,\n    // @option autoPanOnFocus: Boolean = true\n    // When `true`, the map will pan whenever the marker is focused (via\n    // e.g. pressing `tab` on the keyboard) to ensure the marker is\n    // visible within the map's bounds\n    autoPanOnFocus: true,\n    // @section Draggable marker options\n    // @option draggable: Boolean = false\n    // Whether the marker is draggable with mouse/touch or not.\n    draggable: false,\n    // @option autoPan: Boolean = false\n    // Whether to pan the map when dragging this marker near its edge or not.\n    autoPan: false,\n    // @option autoPanPadding: Point = Point(50, 50)\n    // Distance (in pixels to the left/right and to the top/bottom) of the\n    // map edge to start panning the map.\n    autoPanPadding: [50, 50],\n    // @option autoPanSpeed: Number = 10\n    // Number of pixels the map should pan by.\n    autoPanSpeed: 10\n  },\n  /* @section\r\n   *\r\n   * In addition to [shared layer methods](#Layer) like `addTo()` and `remove()` and [popup methods](#Popup) like bindPopup() you can also use the following methods:\r\n   */\n\n  initialize: function (latlng, options) {\n    Util.setOptions(this, options);\n    this._latlng = latLng(latlng);\n  },\n  onAdd: function (map) {\n    this._zoomAnimated = this._zoomAnimated && map.options.markerZoomAnimation;\n    if (this._zoomAnimated) {\n      map.on('zoomanim', this._animateZoom, this);\n    }\n    this._initIcon();\n    this.update();\n  },\n  onRemove: function (map) {\n    if (this.dragging && this.dragging.enabled()) {\n      this.options.draggable = true;\n      this.dragging.removeHooks();\n    }\n    delete this.dragging;\n    if (this._zoomAnimated) {\n      map.off('zoomanim', this._animateZoom, this);\n    }\n    this._removeIcon();\n    this._removeShadow();\n  },\n  getEvents: function () {\n    return {\n      zoom: this.update,\n      viewreset: this.update\n    };\n  },\n  // @method getLatLng: LatLng\n  // Returns the current geographical position of the marker.\n  getLatLng: function () {\n    return this._latlng;\n  },\n  // @method setLatLng(latlng: LatLng): this\n  // Changes the marker position to the given point.\n  setLatLng: function (latlng) {\n    var oldLatLng = this._latlng;\n    this._latlng = latLng(latlng);\n    this.update();\n\n    // @event move: Event\n    // Fired when the marker is moved via [`setLatLng`](#marker-setlatlng) or by [dragging](#marker-dragging). Old and new coordinates are included in event arguments as `oldLatLng`, `latlng`.\n    return this.fire('move', {\n      oldLatLng: oldLatLng,\n      latlng: this._latlng\n    });\n  },\n  // @method setZIndexOffset(offset: Number): this\n  // Changes the [zIndex offset](#marker-zindexoffset) of the marker.\n  setZIndexOffset: function (offset) {\n    this.options.zIndexOffset = offset;\n    return this.update();\n  },\n  // @method getIcon: Icon\n  // Returns the current icon used by the marker\n  getIcon: function () {\n    return this.options.icon;\n  },\n  // @method setIcon(icon: Icon): this\n  // Changes the marker icon.\n  setIcon: function (icon) {\n    this.options.icon = icon;\n    if (this._map) {\n      this._initIcon();\n      this.update();\n    }\n    if (this._popup) {\n      this.bindPopup(this._popup, this._popup.options);\n    }\n    return this;\n  },\n  getElement: function () {\n    return this._icon;\n  },\n  update: function () {\n    if (this._icon && this._map) {\n      var pos = this._map.latLngToLayerPoint(this._latlng).round();\n      this._setPos(pos);\n    }\n    return this;\n  },\n  _initIcon: function () {\n    var options = this.options,\n      classToAdd = 'leaflet-zoom-' + (this._zoomAnimated ? 'animated' : 'hide');\n    var icon = options.icon.createIcon(this._icon),\n      addIcon = false;\n\n    // if we're not reusing the icon, remove the old one and init new one\n    if (icon !== this._icon) {\n      if (this._icon) {\n        this._removeIcon();\n      }\n      addIcon = true;\n      if (options.title) {\n        icon.title = options.title;\n      }\n      if (icon.tagName === 'IMG') {\n        icon.alt = options.alt || '';\n      }\n    }\n    DomUtil.addClass(icon, classToAdd);\n    if (options.keyboard) {\n      icon.tabIndex = '0';\n      icon.setAttribute('role', 'button');\n    }\n    this._icon = icon;\n    if (options.riseOnHover) {\n      this.on({\n        mouseover: this._bringToFront,\n        mouseout: this._resetZIndex\n      });\n    }\n    if (this.options.autoPanOnFocus) {\n      DomEvent.on(icon, 'focus', this._panOnFocus, this);\n    }\n    var newShadow = options.icon.createShadow(this._shadow),\n      addShadow = false;\n    if (newShadow !== this._shadow) {\n      this._removeShadow();\n      addShadow = true;\n    }\n    if (newShadow) {\n      DomUtil.addClass(newShadow, classToAdd);\n      newShadow.alt = '';\n    }\n    this._shadow = newShadow;\n    if (options.opacity < 1) {\n      this._updateOpacity();\n    }\n    if (addIcon) {\n      this.getPane().appendChild(this._icon);\n    }\n    this._initInteraction();\n    if (newShadow && addShadow) {\n      this.getPane(options.shadowPane).appendChild(this._shadow);\n    }\n  },\n  _removeIcon: function () {\n    if (this.options.riseOnHover) {\n      this.off({\n        mouseover: this._bringToFront,\n        mouseout: this._resetZIndex\n      });\n    }\n    if (this.options.autoPanOnFocus) {\n      DomEvent.off(this._icon, 'focus', this._panOnFocus, this);\n    }\n    DomUtil.remove(this._icon);\n    this.removeInteractiveTarget(this._icon);\n    this._icon = null;\n  },\n  _removeShadow: function () {\n    if (this._shadow) {\n      DomUtil.remove(this._shadow);\n    }\n    this._shadow = null;\n  },\n  _setPos: function (pos) {\n    if (this._icon) {\n      DomUtil.setPosition(this._icon, pos);\n    }\n    if (this._shadow) {\n      DomUtil.setPosition(this._shadow, pos);\n    }\n    this._zIndex = pos.y + this.options.zIndexOffset;\n    this._resetZIndex();\n  },\n  _updateZIndex: function (offset) {\n    if (this._icon) {\n      this._icon.style.zIndex = this._zIndex + offset;\n    }\n  },\n  _animateZoom: function (opt) {\n    var pos = this._map._latLngToNewLayerPoint(this._latlng, opt.zoom, opt.center).round();\n    this._setPos(pos);\n  },\n  _initInteraction: function () {\n    if (!this.options.interactive) {\n      return;\n    }\n    DomUtil.addClass(this._icon, 'leaflet-interactive');\n    this.addInteractiveTarget(this._icon);\n    if (MarkerDrag) {\n      var draggable = this.options.draggable;\n      if (this.dragging) {\n        draggable = this.dragging.enabled();\n        this.dragging.disable();\n      }\n      this.dragging = new MarkerDrag(this);\n      if (draggable) {\n        this.dragging.enable();\n      }\n    }\n  },\n  // @method setOpacity(opacity: Number): this\n  // Changes the opacity of the marker.\n  setOpacity: function (opacity) {\n    this.options.opacity = opacity;\n    if (this._map) {\n      this._updateOpacity();\n    }\n    return this;\n  },\n  _updateOpacity: function () {\n    var opacity = this.options.opacity;\n    if (this._icon) {\n      DomUtil.setOpacity(this._icon, opacity);\n    }\n    if (this._shadow) {\n      DomUtil.setOpacity(this._shadow, opacity);\n    }\n  },\n  _bringToFront: function () {\n    this._updateZIndex(this.options.riseOffset);\n  },\n  _resetZIndex: function () {\n    this._updateZIndex(0);\n  },\n  _panOnFocus: function () {\n    var map = this._map;\n    if (!map) {\n      return;\n    }\n    var iconOpts = this.options.icon.options;\n    var size = iconOpts.iconSize ? point(iconOpts.iconSize) : point(0, 0);\n    var anchor = iconOpts.iconAnchor ? point(iconOpts.iconAnchor) : point(0, 0);\n    map.panInside(this._latlng, {\n      paddingTopLeft: anchor,\n      paddingBottomRight: size.subtract(anchor)\n    });\n  },\n  _getPopupAnchor: function () {\n    return this.options.icon.options.popupAnchor;\n  },\n  _getTooltipAnchor: function () {\n    return this.options.icon.options.tooltipAnchor;\n  }\n});\n\n// factory L.marker(latlng: LatLng, options? : Marker options)\n\n// @factory L.marker(latlng: LatLng, options? : Marker options)\n// Instantiates a Marker object given a geographical point and optionally an options object.\nexport function marker(latlng, options) {\n  return new Marker(latlng, options);\n}","map":{"version":3,"names":["Layer","IconDefault","Util","toLatLng","latLng","toPoint","point","DomUtil","DomEvent","MarkerDrag","Marker","extend","options","icon","interactive","keyboard","title","alt","zIndexOffset","opacity","riseOnHover","riseOffset","pane","shadowPane","bubblingMouseEvents","autoPanOnFocus","draggable","autoPan","autoPanPadding","autoPanSpeed","initialize","latlng","setOptions","_latlng","onAdd","map","_zoomAnimated","markerZoomAnimation","on","_animateZoom","_initIcon","update","onRemove","dragging","enabled","removeHooks","off","_removeIcon","_removeShadow","getEvents","zoom","viewreset","getLatLng","setLatLng","oldLatLng","fire","setZIndexOffset","offset","getIcon","setIcon","_map","_popup","bindPopup","getElement","_icon","pos","latLngToLayerPoint","round","_setPos","classToAdd","createIcon","addIcon","tagName","addClass","tabIndex","setAttribute","mouseover","_bringToFront","mouseout","_resetZIndex","_panOnFocus","newShadow","createShadow","_shadow","addShadow","_updateOpacity","getPane","appendChild","_initInteraction","remove","removeInteractiveTarget","setPosition","_zIndex","y","_updateZIndex","style","zIndex","opt","_latLngToNewLayerPoint","center","addInteractiveTarget","disable","enable","setOpacity","iconOpts","size","iconSize","anchor","iconAnchor","panInside","paddingTopLeft","paddingBottomRight","subtract","_getPopupAnchor","popupAnchor","_getTooltipAnchor","tooltipAnchor","marker"],"sources":["C:/Users/aless/OneDrive/Área de Trabalho/Registro Ponto front-end GitHub/ReactProjects/my-app/node_modules/leaflet/src/layer/marker/Marker.js"],"sourcesContent":["import {Layer} from '../Layer';\r\nimport {IconDefault} from './Icon.Default';\r\nimport * as Util from '../../core/Util';\r\nimport {toLatLng as latLng} from '../../geo/LatLng';\r\nimport {toPoint as point} from '../../geometry/Point';\r\nimport * as DomUtil from '../../dom/DomUtil';\r\nimport * as DomEvent from '../../dom/DomEvent';\r\nimport {MarkerDrag} from './Marker.Drag';\r\n\r\n/*\r\n * @class Marker\r\n * @inherits Interactive layer\r\n * @aka L.Marker\r\n * L.Marker is used to display clickable/draggable icons on the map. Extends `Layer`.\r\n *\r\n * @example\r\n *\r\n * ```js\r\n * L.marker([50.5, 30.5]).addTo(map);\r\n * ```\r\n */\r\n\r\nexport var Marker = Layer.extend({\r\n\r\n\t// @section\r\n\t// @aka Marker options\r\n\toptions: {\r\n\t\t// @option icon: Icon = *\r\n\t\t// Icon instance to use for rendering the marker.\r\n\t\t// See [Icon documentation](#L.Icon) for details on how to customize the marker icon.\r\n\t\t// If not specified, a common instance of `L.Icon.Default` is used.\r\n\t\ticon: new IconDefault(),\r\n\r\n\t\t// Option inherited from \"Interactive layer\" abstract class\r\n\t\tinteractive: true,\r\n\r\n\t\t// @option keyboard: Boolean = true\r\n\t\t// Whether the marker can be tabbed to with a keyboard and clicked by pressing enter.\r\n\t\tkeyboard: true,\r\n\r\n\t\t// @option title: String = ''\r\n\t\t// Text for the browser tooltip that appear on marker hover (no tooltip by default).\r\n\t\t// [Useful for accessibility](https://leafletjs.com/examples/accessibility/#markers-must-be-labelled).\r\n\t\ttitle: '',\r\n\r\n\t\t// @option alt: String = 'Marker'\r\n\t\t// Text for the `alt` attribute of the icon image.\r\n\t\t// [Useful for accessibility](https://leafletjs.com/examples/accessibility/#markers-must-be-labelled).\r\n\t\talt: 'Marker',\r\n\r\n\t\t// @option zIndexOffset: Number = 0\r\n\t\t// By default, marker images zIndex is set automatically based on its latitude. Use this option if you want to put the marker on top of all others (or below), specifying a high value like `1000` (or high negative value, respectively).\r\n\t\tzIndexOffset: 0,\r\n\r\n\t\t// @option opacity: Number = 1.0\r\n\t\t// The opacity of the marker.\r\n\t\topacity: 1,\r\n\r\n\t\t// @option riseOnHover: Boolean = false\r\n\t\t// If `true`, the marker will get on top of others when you hover the mouse over it.\r\n\t\triseOnHover: false,\r\n\r\n\t\t// @option riseOffset: Number = 250\r\n\t\t// The z-index offset used for the `riseOnHover` feature.\r\n\t\triseOffset: 250,\r\n\r\n\t\t// @option pane: String = 'markerPane'\r\n\t\t// `Map pane` where the markers icon will be added.\r\n\t\tpane: 'markerPane',\r\n\r\n\t\t// @option shadowPane: String = 'shadowPane'\r\n\t\t// `Map pane` where the markers shadow will be added.\r\n\t\tshadowPane: 'shadowPane',\r\n\r\n\t\t// @option bubblingMouseEvents: Boolean = false\r\n\t\t// When `true`, a mouse event on this marker will trigger the same event on the map\r\n\t\t// (unless [`L.DomEvent.stopPropagation`](#domevent-stoppropagation) is used).\r\n\t\tbubblingMouseEvents: false,\r\n\r\n\t\t// @option autoPanOnFocus: Boolean = true\r\n\t\t// When `true`, the map will pan whenever the marker is focused (via\r\n\t\t// e.g. pressing `tab` on the keyboard) to ensure the marker is\r\n\t\t// visible within the map's bounds\r\n\t\tautoPanOnFocus: true,\r\n\r\n\t\t// @section Draggable marker options\r\n\t\t// @option draggable: Boolean = false\r\n\t\t// Whether the marker is draggable with mouse/touch or not.\r\n\t\tdraggable: false,\r\n\r\n\t\t// @option autoPan: Boolean = false\r\n\t\t// Whether to pan the map when dragging this marker near its edge or not.\r\n\t\tautoPan: false,\r\n\r\n\t\t// @option autoPanPadding: Point = Point(50, 50)\r\n\t\t// Distance (in pixels to the left/right and to the top/bottom) of the\r\n\t\t// map edge to start panning the map.\r\n\t\tautoPanPadding: [50, 50],\r\n\r\n\t\t// @option autoPanSpeed: Number = 10\r\n\t\t// Number of pixels the map should pan by.\r\n\t\tautoPanSpeed: 10\r\n\t},\r\n\r\n\t/* @section\r\n\t *\r\n\t * In addition to [shared layer methods](#Layer) like `addTo()` and `remove()` and [popup methods](#Popup) like bindPopup() you can also use the following methods:\r\n\t */\r\n\r\n\tinitialize: function (latlng, options) {\r\n\t\tUtil.setOptions(this, options);\r\n\t\tthis._latlng = latLng(latlng);\r\n\t},\r\n\r\n\tonAdd: function (map) {\r\n\t\tthis._zoomAnimated = this._zoomAnimated && map.options.markerZoomAnimation;\r\n\r\n\t\tif (this._zoomAnimated) {\r\n\t\t\tmap.on('zoomanim', this._animateZoom, this);\r\n\t\t}\r\n\r\n\t\tthis._initIcon();\r\n\t\tthis.update();\r\n\t},\r\n\r\n\tonRemove: function (map) {\r\n\t\tif (this.dragging && this.dragging.enabled()) {\r\n\t\t\tthis.options.draggable = true;\r\n\t\t\tthis.dragging.removeHooks();\r\n\t\t}\r\n\t\tdelete this.dragging;\r\n\r\n\t\tif (this._zoomAnimated) {\r\n\t\t\tmap.off('zoomanim', this._animateZoom, this);\r\n\t\t}\r\n\r\n\t\tthis._removeIcon();\r\n\t\tthis._removeShadow();\r\n\t},\r\n\r\n\tgetEvents: function () {\r\n\t\treturn {\r\n\t\t\tzoom: this.update,\r\n\t\t\tviewreset: this.update\r\n\t\t};\r\n\t},\r\n\r\n\t// @method getLatLng: LatLng\r\n\t// Returns the current geographical position of the marker.\r\n\tgetLatLng: function () {\r\n\t\treturn this._latlng;\r\n\t},\r\n\r\n\t// @method setLatLng(latlng: LatLng): this\r\n\t// Changes the marker position to the given point.\r\n\tsetLatLng: function (latlng) {\r\n\t\tvar oldLatLng = this._latlng;\r\n\t\tthis._latlng = latLng(latlng);\r\n\t\tthis.update();\r\n\r\n\t\t// @event move: Event\r\n\t\t// Fired when the marker is moved via [`setLatLng`](#marker-setlatlng) or by [dragging](#marker-dragging). Old and new coordinates are included in event arguments as `oldLatLng`, `latlng`.\r\n\t\treturn this.fire('move', {oldLatLng: oldLatLng, latlng: this._latlng});\r\n\t},\r\n\r\n\t// @method setZIndexOffset(offset: Number): this\r\n\t// Changes the [zIndex offset](#marker-zindexoffset) of the marker.\r\n\tsetZIndexOffset: function (offset) {\r\n\t\tthis.options.zIndexOffset = offset;\r\n\t\treturn this.update();\r\n\t},\r\n\r\n\t// @method getIcon: Icon\r\n\t// Returns the current icon used by the marker\r\n\tgetIcon: function () {\r\n\t\treturn this.options.icon;\r\n\t},\r\n\r\n\t// @method setIcon(icon: Icon): this\r\n\t// Changes the marker icon.\r\n\tsetIcon: function (icon) {\r\n\r\n\t\tthis.options.icon = icon;\r\n\r\n\t\tif (this._map) {\r\n\t\t\tthis._initIcon();\r\n\t\t\tthis.update();\r\n\t\t}\r\n\r\n\t\tif (this._popup) {\r\n\t\t\tthis.bindPopup(this._popup, this._popup.options);\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\tgetElement: function () {\r\n\t\treturn this._icon;\r\n\t},\r\n\r\n\tupdate: function () {\r\n\r\n\t\tif (this._icon && this._map) {\r\n\t\t\tvar pos = this._map.latLngToLayerPoint(this._latlng).round();\r\n\t\t\tthis._setPos(pos);\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t_initIcon: function () {\r\n\t\tvar options = this.options,\r\n\t\t    classToAdd = 'leaflet-zoom-' + (this._zoomAnimated ? 'animated' : 'hide');\r\n\r\n\t\tvar icon = options.icon.createIcon(this._icon),\r\n\t\t    addIcon = false;\r\n\r\n\t\t// if we're not reusing the icon, remove the old one and init new one\r\n\t\tif (icon !== this._icon) {\r\n\t\t\tif (this._icon) {\r\n\t\t\t\tthis._removeIcon();\r\n\t\t\t}\r\n\t\t\taddIcon = true;\r\n\r\n\t\t\tif (options.title) {\r\n\t\t\t\ticon.title = options.title;\r\n\t\t\t}\r\n\r\n\t\t\tif (icon.tagName === 'IMG') {\r\n\t\t\t\ticon.alt = options.alt || '';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tDomUtil.addClass(icon, classToAdd);\r\n\r\n\t\tif (options.keyboard) {\r\n\t\t\ticon.tabIndex = '0';\r\n\t\t\ticon.setAttribute('role', 'button');\r\n\t\t}\r\n\r\n\t\tthis._icon = icon;\r\n\r\n\t\tif (options.riseOnHover) {\r\n\t\t\tthis.on({\r\n\t\t\t\tmouseover: this._bringToFront,\r\n\t\t\t\tmouseout: this._resetZIndex\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (this.options.autoPanOnFocus) {\r\n\t\t\tDomEvent.on(icon, 'focus', this._panOnFocus, this);\r\n\t\t}\r\n\r\n\t\tvar newShadow = options.icon.createShadow(this._shadow),\r\n\t\t    addShadow = false;\r\n\r\n\t\tif (newShadow !== this._shadow) {\r\n\t\t\tthis._removeShadow();\r\n\t\t\taddShadow = true;\r\n\t\t}\r\n\r\n\t\tif (newShadow) {\r\n\t\t\tDomUtil.addClass(newShadow, classToAdd);\r\n\t\t\tnewShadow.alt = '';\r\n\t\t}\r\n\t\tthis._shadow = newShadow;\r\n\r\n\r\n\t\tif (options.opacity < 1) {\r\n\t\t\tthis._updateOpacity();\r\n\t\t}\r\n\r\n\r\n\t\tif (addIcon) {\r\n\t\t\tthis.getPane().appendChild(this._icon);\r\n\t\t}\r\n\t\tthis._initInteraction();\r\n\t\tif (newShadow && addShadow) {\r\n\t\t\tthis.getPane(options.shadowPane).appendChild(this._shadow);\r\n\t\t}\r\n\t},\r\n\r\n\t_removeIcon: function () {\r\n\t\tif (this.options.riseOnHover) {\r\n\t\t\tthis.off({\r\n\t\t\t\tmouseover: this._bringToFront,\r\n\t\t\t\tmouseout: this._resetZIndex\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (this.options.autoPanOnFocus) {\r\n\t\t\tDomEvent.off(this._icon, 'focus', this._panOnFocus, this);\r\n\t\t}\r\n\r\n\t\tDomUtil.remove(this._icon);\r\n\t\tthis.removeInteractiveTarget(this._icon);\r\n\r\n\t\tthis._icon = null;\r\n\t},\r\n\r\n\t_removeShadow: function () {\r\n\t\tif (this._shadow) {\r\n\t\t\tDomUtil.remove(this._shadow);\r\n\t\t}\r\n\t\tthis._shadow = null;\r\n\t},\r\n\r\n\t_setPos: function (pos) {\r\n\r\n\t\tif (this._icon) {\r\n\t\t\tDomUtil.setPosition(this._icon, pos);\r\n\t\t}\r\n\r\n\t\tif (this._shadow) {\r\n\t\t\tDomUtil.setPosition(this._shadow, pos);\r\n\t\t}\r\n\r\n\t\tthis._zIndex = pos.y + this.options.zIndexOffset;\r\n\r\n\t\tthis._resetZIndex();\r\n\t},\r\n\r\n\t_updateZIndex: function (offset) {\r\n\t\tif (this._icon) {\r\n\t\t\tthis._icon.style.zIndex = this._zIndex + offset;\r\n\t\t}\r\n\t},\r\n\r\n\t_animateZoom: function (opt) {\r\n\t\tvar pos = this._map._latLngToNewLayerPoint(this._latlng, opt.zoom, opt.center).round();\r\n\r\n\t\tthis._setPos(pos);\r\n\t},\r\n\r\n\t_initInteraction: function () {\r\n\r\n\t\tif (!this.options.interactive) { return; }\r\n\r\n\t\tDomUtil.addClass(this._icon, 'leaflet-interactive');\r\n\r\n\t\tthis.addInteractiveTarget(this._icon);\r\n\r\n\t\tif (MarkerDrag) {\r\n\t\t\tvar draggable = this.options.draggable;\r\n\t\t\tif (this.dragging) {\r\n\t\t\t\tdraggable = this.dragging.enabled();\r\n\t\t\t\tthis.dragging.disable();\r\n\t\t\t}\r\n\r\n\t\t\tthis.dragging = new MarkerDrag(this);\r\n\r\n\t\t\tif (draggable) {\r\n\t\t\t\tthis.dragging.enable();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t// @method setOpacity(opacity: Number): this\r\n\t// Changes the opacity of the marker.\r\n\tsetOpacity: function (opacity) {\r\n\t\tthis.options.opacity = opacity;\r\n\t\tif (this._map) {\r\n\t\t\tthis._updateOpacity();\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t_updateOpacity: function () {\r\n\t\tvar opacity = this.options.opacity;\r\n\r\n\t\tif (this._icon) {\r\n\t\t\tDomUtil.setOpacity(this._icon, opacity);\r\n\t\t}\r\n\r\n\t\tif (this._shadow) {\r\n\t\t\tDomUtil.setOpacity(this._shadow, opacity);\r\n\t\t}\r\n\t},\r\n\r\n\t_bringToFront: function () {\r\n\t\tthis._updateZIndex(this.options.riseOffset);\r\n\t},\r\n\r\n\t_resetZIndex: function () {\r\n\t\tthis._updateZIndex(0);\r\n\t},\r\n\r\n\t_panOnFocus: function () {\r\n\t\tvar map = this._map;\r\n\t\tif (!map) { return; }\r\n\r\n\t\tvar iconOpts = this.options.icon.options;\r\n\t\tvar size = iconOpts.iconSize ? point(iconOpts.iconSize) : point(0, 0);\r\n\t\tvar anchor = iconOpts.iconAnchor ? point(iconOpts.iconAnchor) : point(0, 0);\r\n\r\n\t\tmap.panInside(this._latlng, {\r\n\t\t\tpaddingTopLeft: anchor,\r\n\t\t\tpaddingBottomRight: size.subtract(anchor)\r\n\t\t});\r\n\t},\r\n\r\n\t_getPopupAnchor: function () {\r\n\t\treturn this.options.icon.options.popupAnchor;\r\n\t},\r\n\r\n\t_getTooltipAnchor: function () {\r\n\t\treturn this.options.icon.options.tooltipAnchor;\r\n\t}\r\n});\r\n\r\n\r\n// factory L.marker(latlng: LatLng, options? : Marker options)\r\n\r\n// @factory L.marker(latlng: LatLng, options? : Marker options)\r\n// Instantiates a Marker object given a geographical point and optionally an options object.\r\nexport function marker(latlng, options) {\r\n\treturn new Marker(latlng, options);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}