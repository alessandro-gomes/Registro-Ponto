{"ast":null,"code":"import { LatLng } from '../LatLng';\nimport { Bounds } from '../../geometry/Bounds';\nimport { Point } from '../../geometry/Point';\n\n/*\r\n * @namespace Projection\r\n * @projection L.Projection.SphericalMercator\r\n *\r\n * Spherical Mercator projection — the most common projection for online maps,\r\n * used by almost all free and commercial tile providers. Assumes that Earth is\r\n * a sphere. Used by the `EPSG:3857` CRS.\r\n */\n\nvar earthRadius = 6378137;\nexport var SphericalMercator = {\n  R: earthRadius,\n  MAX_LATITUDE: 85.0511287798,\n  project: function (latlng) {\n    var d = Math.PI / 180,\n      max = this.MAX_LATITUDE,\n      lat = Math.max(Math.min(max, latlng.lat), -max),\n      sin = Math.sin(lat * d);\n    return new Point(this.R * latlng.lng * d, this.R * Math.log((1 + sin) / (1 - sin)) / 2);\n  },\n  unproject: function (point) {\n    var d = 180 / Math.PI;\n    return new LatLng((2 * Math.atan(Math.exp(point.y / this.R)) - Math.PI / 2) * d, point.x * d / this.R);\n  },\n  bounds: function () {\n    var d = earthRadius * Math.PI;\n    return new Bounds([-d, -d], [d, d]);\n  }()\n};","map":{"version":3,"names":["LatLng","Bounds","Point","earthRadius","SphericalMercator","R","MAX_LATITUDE","project","latlng","d","Math","PI","max","lat","min","sin","lng","log","unproject","point","atan","exp","y","x","bounds"],"sources":["C:/Users/aless/OneDrive/Área de Trabalho/Registro Ponto front-end GitHub/ReactProjects/my-app/node_modules/leaflet/src/geo/projection/Projection.SphericalMercator.js"],"sourcesContent":["import {LatLng} from '../LatLng';\r\nimport {Bounds} from '../../geometry/Bounds';\r\nimport {Point} from '../../geometry/Point';\r\n\r\n/*\r\n * @namespace Projection\r\n * @projection L.Projection.SphericalMercator\r\n *\r\n * Spherical Mercator projection — the most common projection for online maps,\r\n * used by almost all free and commercial tile providers. Assumes that Earth is\r\n * a sphere. Used by the `EPSG:3857` CRS.\r\n */\r\n\r\nvar earthRadius = 6378137;\r\n\r\nexport var SphericalMercator = {\r\n\r\n\tR: earthRadius,\r\n\tMAX_LATITUDE: 85.0511287798,\r\n\r\n\tproject: function (latlng) {\r\n\t\tvar d = Math.PI / 180,\r\n\t\t    max = this.MAX_LATITUDE,\r\n\t\t    lat = Math.max(Math.min(max, latlng.lat), -max),\r\n\t\t    sin = Math.sin(lat * d);\r\n\r\n\t\treturn new Point(\r\n\t\t\tthis.R * latlng.lng * d,\r\n\t\t\tthis.R * Math.log((1 + sin) / (1 - sin)) / 2);\r\n\t},\r\n\r\n\tunproject: function (point) {\r\n\t\tvar d = 180 / Math.PI;\r\n\r\n\t\treturn new LatLng(\r\n\t\t\t(2 * Math.atan(Math.exp(point.y / this.R)) - (Math.PI / 2)) * d,\r\n\t\t\tpoint.x * d / this.R);\r\n\t},\r\n\r\n\tbounds: (function () {\r\n\t\tvar d = earthRadius * Math.PI;\r\n\t\treturn new Bounds([-d, -d], [d, d]);\r\n\t})()\r\n};\r\n"],"mappings":"AAAA,SAAQA,MAAM,QAAO,WAAW;AAChC,SAAQC,MAAM,QAAO,uBAAuB;AAC5C,SAAQC,KAAK,QAAO,sBAAsB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,WAAW,GAAG,OAAO;AAEzB,OAAO,IAAIC,iBAAiB,GAAG;EAE9BC,CAAC,EAAEF,WAAW;EACdG,YAAY,EAAE,aAAa;EAE3BC,OAAO,EAAE,UAAUC,MAAM,EAAE;IAC1B,IAAIC,CAAC,GAAGC,IAAI,CAACC,EAAE,GAAG,GAAG;MACjBC,GAAG,GAAG,IAAI,CAACN,YAAY;MACvBO,GAAG,GAAGH,IAAI,CAACE,GAAG,CAACF,IAAI,CAACI,GAAG,CAACF,GAAG,EAAEJ,MAAM,CAACK,GAAG,CAAC,EAAE,CAACD,GAAG,CAAC;MAC/CG,GAAG,GAAGL,IAAI,CAACK,GAAG,CAACF,GAAG,GAAGJ,CAAC,CAAC;IAE3B,OAAO,IAAIP,KAAK,CACf,IAAI,CAACG,CAAC,GAAGG,MAAM,CAACQ,GAAG,GAAGP,CAAC,EACvB,IAAI,CAACJ,CAAC,GAAGK,IAAI,CAACO,GAAG,CAAC,CAAC,CAAC,GAAGF,GAAG,KAAK,CAAC,GAAGA,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;EAC/C,CAAC;EAEDG,SAAS,EAAE,UAAUC,KAAK,EAAE;IAC3B,IAAIV,CAAC,GAAG,GAAG,GAAGC,IAAI,CAACC,EAAE;IAErB,OAAO,IAAIX,MAAM,CAChB,CAAC,CAAC,GAAGU,IAAI,CAACU,IAAI,CAACV,IAAI,CAACW,GAAG,CAACF,KAAK,CAACG,CAAC,GAAG,IAAI,CAACjB,CAAC,CAAC,CAAC,GAAIK,IAAI,CAACC,EAAE,GAAG,CAAE,IAAIF,CAAC,EAC/DU,KAAK,CAACI,CAAC,GAAGd,CAAC,GAAG,IAAI,CAACJ,CAAC,CAAC;EACvB,CAAC;EAEDmB,MAAM,EAAG,YAAY;IACpB,IAAIf,CAAC,GAAGN,WAAW,GAAGO,IAAI,CAACC,EAAE;IAC7B,OAAO,IAAIV,MAAM,CAAC,CAAC,CAACQ,CAAC,EAAE,CAACA,CAAC,CAAC,EAAE,CAACA,CAAC,EAAEA,CAAC,CAAC,CAAC;EACpC,CAAC;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}