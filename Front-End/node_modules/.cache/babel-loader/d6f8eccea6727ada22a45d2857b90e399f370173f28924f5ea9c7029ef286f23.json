{"ast":null,"code":"import { Class } from './Class';\n\n/*\n\tL.Handler is a base class for handler classes that are used internally to inject\n\tinteraction features like dragging to classes like Map and Marker.\n*/\n\n// @class Handler\n// @aka L.Handler\n// Abstract class for map interaction handlers\n\nexport var Handler = Class.extend({\n  initialize: function (map) {\n    this._map = map;\n  },\n  // @method enable(): this\n  // Enables the handler\n  enable: function () {\n    if (this._enabled) {\n      return this;\n    }\n    this._enabled = true;\n    this.addHooks();\n    return this;\n  },\n  // @method disable(): this\n  // Disables the handler\n  disable: function () {\n    if (!this._enabled) {\n      return this;\n    }\n    this._enabled = false;\n    this.removeHooks();\n    return this;\n  },\n  // @method enabled(): Boolean\n  // Returns `true` if the handler is enabled\n  enabled: function () {\n    return !!this._enabled;\n  }\n\n  // @section Extension methods\n  // Classes inheriting from `Handler` must implement the two following methods:\n  // @method addHooks()\n  // Called when the handler is enabled, should add event hooks.\n  // @method removeHooks()\n  // Called when the handler is disabled, should remove the event hooks added previously.\n});\n\n// @section There is static function which can be called without instantiating L.Handler:\n// @function addTo(map: Map, name: String): this\n// Adds a new Handler to the given map with the given name.\nHandler.addTo = function (map, name) {\n  map.addHandler(name, this);\n  return this;\n};","map":{"version":3,"names":["Class","Handler","extend","initialize","map","_map","enable","_enabled","addHooks","disable","removeHooks","enabled","addTo","name","addHandler"],"sources":["C:/Users/aless/OneDrive/√Årea de Trabalho/Registro Ponto front-end GitHub/ReactProjects/my-app/node_modules/leaflet/src/core/Handler.js"],"sourcesContent":["import {Class} from './Class';\n\n/*\n\tL.Handler is a base class for handler classes that are used internally to inject\n\tinteraction features like dragging to classes like Map and Marker.\n*/\n\n// @class Handler\n// @aka L.Handler\n// Abstract class for map interaction handlers\n\nexport var Handler = Class.extend({\n\tinitialize: function (map) {\n\t\tthis._map = map;\n\t},\n\n\t// @method enable(): this\n\t// Enables the handler\n\tenable: function () {\n\t\tif (this._enabled) { return this; }\n\n\t\tthis._enabled = true;\n\t\tthis.addHooks();\n\t\treturn this;\n\t},\n\n\t// @method disable(): this\n\t// Disables the handler\n\tdisable: function () {\n\t\tif (!this._enabled) { return this; }\n\n\t\tthis._enabled = false;\n\t\tthis.removeHooks();\n\t\treturn this;\n\t},\n\n\t// @method enabled(): Boolean\n\t// Returns `true` if the handler is enabled\n\tenabled: function () {\n\t\treturn !!this._enabled;\n\t}\n\n\t// @section Extension methods\n\t// Classes inheriting from `Handler` must implement the two following methods:\n\t// @method addHooks()\n\t// Called when the handler is enabled, should add event hooks.\n\t// @method removeHooks()\n\t// Called when the handler is disabled, should remove the event hooks added previously.\n});\n\n// @section There is static function which can be called without instantiating L.Handler:\n// @function addTo(map: Map, name: String): this\n// Adds a new Handler to the given map with the given name.\nHandler.addTo = function (map, name) {\n\tmap.addHandler(name, this);\n\treturn this;\n};\n"],"mappings":"AAAA,SAAQA,KAAK,QAAO,SAAS;;AAE7B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,OAAO,IAAIC,OAAO,GAAGD,KAAK,CAACE,MAAM,CAAC;EACjCC,UAAU,EAAE,UAAUC,GAAG,EAAE;IAC1B,IAAI,CAACC,IAAI,GAAGD,GAAG;EAChB,CAAC;EAED;EACA;EACAE,MAAM,EAAE,YAAY;IACnB,IAAI,IAAI,CAACC,QAAQ,EAAE;MAAE,OAAO,IAAI;IAAE;IAElC,IAAI,CAACA,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACC,QAAQ,EAAE;IACf,OAAO,IAAI;EACZ,CAAC;EAED;EACA;EACAC,OAAO,EAAE,YAAY;IACpB,IAAI,CAAC,IAAI,CAACF,QAAQ,EAAE;MAAE,OAAO,IAAI;IAAE;IAEnC,IAAI,CAACA,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACG,WAAW,EAAE;IAClB,OAAO,IAAI;EACZ,CAAC;EAED;EACA;EACAC,OAAO,EAAE,YAAY;IACpB,OAAO,CAAC,CAAC,IAAI,CAACJ,QAAQ;EACvB;;EAEA;EACA;EACA;EACA;EACA;EACA;AACD,CAAC,CAAC;;AAEF;AACA;AACA;AACAN,OAAO,CAACW,KAAK,GAAG,UAAUR,GAAG,EAAES,IAAI,EAAE;EACpCT,GAAG,CAACU,UAAU,CAACD,IAAI,EAAE,IAAI,CAAC;EAC1B,OAAO,IAAI;AACZ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}